<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="sellTicketButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>